{"version":3,"sources":["core.ts","ADT/Tuple2/Ka5583bf3ad34.ts","core/Filler.ts","ADT/Filler/Kae1dfeece189.ts","ADT/Type/K7028aa556ebc.ts","core/Word8.ts","ADT/Word8/Kb1f46a49c8f8.ts","ADT/SHAKE128_48/K9f214799149b.ts","ADT/Maybe/Kda6836778fd4.ts","ADT/Either/K6260e465ae74.ts","ADT/List/Kb8cd13187198.ts","ADT/ConTree/K86653e040025.ts","ADT/ADT/K3e8257255cbf.ts","ADT/LeastSignificantFirst/K20ffacc8f8c9.ts","ADT/NonEmptyList/Kbf2d1c86eb20.ts","ADT/MostSignificantFirst/K74e2b3b89941.ts","core/Word7.ts","ADT/Word7/Kf4c946334a7e.ts","ADT/Word/Kf92e8339908a.ts","ADT/Word32/K2412799c99f1.ts","ADT/Char/K066db52af145.ts","ADT/UnicodeLetter/K3878b3580fc5.ts","ADT/UnicodeLetterOrNumberOrLine/K33445520c45a.ts","ADT/UnicodeSymbol/K801030ef543c.ts","ADT/Identifier/Kdc26e9d90047.ts","ADT/ADTRef/K07b1b045ac3c.ts","ADT/AbsRef/K4bbd38587b9e.ts","api.ts","ADT/ByType/K87f090a54ea3.ts","core/Bytes.ts","ADT/Bytes/Kf8844385a443.ts","ADT/BLOB/Kf139d4751fda.ts","ADT/FlatEncoding/K982148c09ddb.ts","ADT/TypedBLOB/K614edd84c8bd.ts","ADT/ChannelSelectionResult/Kc6627a317dbc.ts","ADT/Bool/K306f1981b41c.ts","ADT/HostAddress/K64f93d94a73d.ts","ADT/Word16/K295e24d62fac.ts","ADT/HostPort/K0ab5ac6303b9.ts","ADT/SocketAddress/Ke5d02571ce7b.ts","ADT/WebSocketAddress/Kc802c6aae1af.ts","ADT/IP4Address/K6cb2ee3ac409.ts","top.ts","index.ts","ADT/Bit/K65149ce3b366.ts","spec/test-top.ts"],"names":[],"mappings":"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","file":"77cd33b063d4920b6f54fb6ba3d377c5.map","sourcesContent":["// Primitives required by the ADT definitions.\n\n// ZM types\n\n// Saturated ZM Type Fold\nexport type zmFold<T> = <A> (f: (tId: zmTypeInfo, pars: A[]) => A) => A\n\n//export const zmConst : <A> (v:A) => ((f: (tId: zmTypeInfo,pars: A[]) => A) => A) = function (v) {return function(f) {return v;}} \n\nexport function zmConst (v:any) {return function(f:any) {return v;}} \n\n//export const zmConst : string = \"\"\n\n//export type zmFold0<T> = <A> (v:A) => zmFold<T>\n//export const zmConst : zmFold0<T> = function (v) {return function(f) {return v;}} \n//export const zmConst : zmFold0<T> = function (v) {return function(f) {return v;}} \n\n//export type zmFold0 = <A> (v:A) => ((f: (tId: zmTypeInfo,pars: A[]) => A) => A)\n//export const zmConst : zmFold0 = function (v) {return function(f) {return v;}} \n\n// ZM type contructor unique code\nexport type zmId = [number, number, number, number, number, number]\n\nexport type zmTypeInfo = { zid: zmId, decoder: (decoders: Decoder[]) => Decoder }\n\n// Flat binary encoding\nexport interface Flat {\n  flatMaxSize: () => number,\n  flatEncode: Encoder,\n}\n\n//export type Decoder<T> = (s:DecoderState) => T\n\nexport type Decoder = (s: DecoderState) => any\n\nexport function flatDecoder (t:zmTypeInfo,decoders:Decoder[]) {\n  return t.decoder(decoders);\n};\n\nexport class DecoderState {\n  buffer: Uint8Array; //Flat-encoded value\n  currPtr: number;    //Pointer to the current byte being decoded (0..buffer.byteLength-1)\n  usedBits: number;   //Number of already decoded bits in the current byte (0..7)\n\n  constructor(buffer: Uint8Array) {\n    this.buffer = buffer;\n    this.currPtr = 0;\n    this.usedBits = 0;\n  }\n\n  // Decode a byteArray (the underlying buffer is modified)\n  byteArray(): Uint8Array {\n    if (this.usedBits != 0) throw Error(\"DecoderState.byteArray: Buffer is not byte aligned\");\n\n    var st = this;\n\n    // const arr = new Uint8Array(1000);\n\n    // while (blkLen=st.buffer[st.currPtr++]) {\n    //   arr.set(st.buffer.subarray(0,blkLen), arrPtr);\n    //   arrPtr += blkLen;\n    //   st.currPtr += blkLen;\n    // }\n\n    var arrPtr=st.currPtr;\n    var arrSize=0;\n    var blkLen;\n\n    st.ensureBytes(1);\n    while (blkLen=st.buffer[st.currPtr++]) {\n      st.ensureBytes(blkLen+1);\n      st.buffer.copyWithin(st.currPtr-1,st.currPtr,st.currPtr+blkLen);\n      st.currPtr += blkLen;\n      arrSize += blkLen;\n    }\n\n    return st.buffer.subarray(arrPtr,arrPtr+arrSize);\n  }\n\n  filler(): void {\n    while (this.zero());\n  }\n\n  bits8(numBits: number): number {\n    if (numBits < 0 || numBits > 8) throw Error(\"Decoder.bits8: incorrect value of numBits \" + numBits);\n    \n    this.ensureBits(numBits);\n\n    const unusedBits = 8 - this.usedBits;\n    const leadingZeros = 8 - numBits;\n    var r = (this.buffer[this.currPtr] << this.usedBits) >>> leadingZeros;\n\n    if (numBits > unusedBits) { r &= (this.buffer[this.currPtr + 1] >>> (unusedBits + leadingZeros)); }\n\n    this.dropBits(numBits);\n    \n    return r;\n  }\n\n  zero(): boolean {\n    this.ensureBit();\n    const b = !(this.buffer[this.currPtr] & (128 >>> this.usedBits));\n    //console.log(\"BIT\",this.buffer,this.currPtr,this.buffer[this.currPtr],128 >>> this.usedBits,(this.buffer[this.currPtr] & (128 >>> this.usedBits)),b);\n    if (this.usedBits == 7) { this.currPtr++; this.usedBits = 0; }\n    else this.usedBits++;\n    return b;\n  }\n\n  // Is this required? Or we can rely on build in js checks?\n  ensureBit(): void {\n    if (this.currPtr >= this.buffer.byteLength) { throw Error(\"DecoderState: Not enough data available: \" + JSON.stringify(this)) };\n  }\n\n  ensureBits(requiredBits: number): void {\n    if (requiredBits > this.availableBits()) { throw Error(\"DecoderState: Not enough data available: \" + JSON.stringify(this)) };\n  }\n\n  ensureBytes(requiredBytes: number): void {\n    if (requiredBytes > this.availableBytes()) { throw Error(\"DecoderState: Not enough data available: \" + JSON.stringify(this)) };\n  }\n\n  availableBits(): number { return 8 * this.availableBytes() - this.usedBits; }\n\n  // Available bytes, ignoring used bits\n  availableBytes(): number { return this.buffer.byteLength - this.currPtr; }\n\n  dropBits(numBits: number): void {\n    const totUsed = numBits + this.usedBits;\n    this.usedBits = totUsed % 8;\n    this.currPtr += Math.floor(totUsed / 8);\n  }\n\n  seal(): void {\n    if (this.availableBits() > 0) { throw Error(\"DecoderState: Unread data: \" + JSON.stringify(this)) };\n  }\n}\n\nexport type Encoder = (s: EncoderState) => void\n\nexport class EncoderState {\n  buffer: Uint8Array;\n  nextPtr: number;\n  usedBits: number;\n  currentByte: number;\n\n  constructor(bufferSize: number) {\n    this.buffer = new Uint8Array(bufferSize);\n    this.nextPtr = 0;\n    this.currentByte = 0;\n    this.usedBits = 0;\n  }\n\n  filler(): void {\n    this.currentByte |= 1;\n    this.nextWord();\n  }\n\n  // add indicated number of bits (up to ? bits)\n  bits(numBits: number, value: number): void {\n    this.usedBits += numBits;\n    let unusedBits = 8 - this.usedBits;\n    if (unusedBits > 0)\n      this.currentByte |= value << unusedBits;\n    else if (unusedBits == 0) { this.currentByte |= value; this.nextWord(); }\n    else {\n      let used = -unusedBits;\n      this.currentByte |= value >>> used;\n      this.nextWord();\n      this.currentByte = value << (8 - used);\n      this.usedBits = used;\n    };\n  }\n\n  zero(): void { this.usedBits == 7 ? this.nextWord() : this.usedBits++; }\n\n  one(): void {\n    if (this.usedBits == 7) {\n      this.currentByte |= 1;\n      this.nextWord();\n    } else {\n      this.currentByte |= (1 << 7 - this.usedBits);\n      this.usedBits++;\n    }\n  }\n\n  byteArray(arr: Uint8Array): void {\n    if (this.usedBits != 0) throw Error(\"EncoderState.byteArray: Buffer is not byte aligned\");\n\n    var st = this;\n\n    function writeBlk(srcPtr: number): void {\n      let srcLen = arr.byteLength - srcPtr;\n      let blkLen = Math.min(srcLen, 255);\n      st.buffer[st.nextPtr++] = blkLen;\n      if (blkLen == 0) return;\n\n      st.buffer.set(arr.subarray(srcPtr, srcPtr + blkLen), st.nextPtr);\n      st.nextPtr += blkLen;\n      srcPtr += blkLen;\n      writeBlk(srcPtr);\n    }\n\n    writeBlk(0);\n  }\n\n  nextWord(): void { this.buffer[this.nextPtr++] = this.currentByte; this.currentByte = 0, this.usedBits = 0; }\n\n  seal(): Uint8Array {\n    if (this.usedBits != 0) { throw Error(\"EncoderState.seal: Byte partially filled: \" + JSON.stringify(this)) };\n    return this.buffer.subarray(0, this.nextPtr);\n  }\n\n}\n\n// Exact encoding size in bits of a prealigned Array of bytes\nexport function byteArraySize(arr: Uint8Array): number {\n  let numBytes = arr.byteLength + arrayBlocks(arr.byteLength);\n  return 8 * numBytes;\n}\n\n// Exact number of bytes needed to store the array blocks lengths\nexport function arrayBlocks(len: number): number {return Math.ceil(len / 255) + 1;}\n\n\n\n\n","import * as Q from '../../core'\n\nexport const $Tuple2:<A extends Q.Flat,B extends Q.Flat>(t0:Q.zmFold<A>,t1:Q.zmFold<B>) => Q.zmFold<Tuple2<A,B>> = function (t1,t2) {return function (f) {return f(___,[t1(f),t2(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xa5,0x58,0x3b,0xf3,0xad,0x34],\n  decoder : function (decoders) {\n        return function(st) { return new Tuple2(decoders[0](st),decoders[1](st)) }\n  }\n}\n\nexport class Tuple2 <A extends Q.Flat,B extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n    public _1: B,\n\n  ) { }\n\n  match <R>(m:{Tuple2:(v0:A,v1:B)=>R}) : R {return m.Tuple2(this._0,this._1);}\n  flatMaxSize():number {return this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from \"../core\";\n\nexport const $Filler: Q.zmFold<Filler> = function (f) { return f(___, []) }\n\nexport const ___ : Q.zmTypeInfo = {\n    zid : [0xae, 0x1d, 0xfe, 0xec, 0xe1, 0x89],\n    decoder : function (decoders) {\n      return function(st) {st.filler();return new FillerEnd();}\n    }\n  }\n\nexport type Filler = FillerBit | FillerEnd\n\nexport class FillerBit implements Q.Flat {\n    constructor(\n        public _0: Filler,\n    ) { }\n\n    flatMaxSize(): number { return 8; }\n    flatEncode(st: Q.EncoderState) { st.filler(); }\n}\n\nexport class FillerEnd implements Q.Flat {\n    flatMaxSize(): number { return 8; }\n    flatEncode(st: Q.EncoderState) { st.filler(); }\n}\n","export * from '../../core/Filler'","import * as Q from '../../core'\n\nexport const $Type:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<Type<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x70,0x28,0xaa,0x55,0x6e,0xbc],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new TypeCon(decoders[0](st)) } else { return new TypeApp(___.decoder([decoders[0]])(st),___.decoder([decoders[0]])(st)) } }\n  }\n}\n\nexport type Type <A extends Q.Flat> = TypeCon <A> | TypeApp <A>\n\nexport class TypeCon <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{TypeCon:(v0:A)=>R,TypeApp:(v0:Type<A>,v1:Type<A>)=>R}) : R {return m.TypeCon(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);}\n\n}\n\nexport class TypeApp <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: Type<A>,\n    public _1: Type<A>,\n\n  ) { }\n\n  match <R>(m:{TypeCon:(v0:A)=>R,TypeApp:(v0:Type<A>,v1:Type<A>)=>R}) : R {return m.TypeApp(this._0,this._1);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from \"../core\";\n\nexport const $Word8 : Q.zmFold<Word8> = function (f) { return f(___, []) }\n\nexport const ___ : Q.zmTypeInfo = {\n    zid : [0xb1, 0xf4, 0x6a, 0x49, 0xc8, 0xf8],\n    decoder : function (decoders) {\n      return function(st) {return new Word8(st.bits8(8));}\n    }\n}\n\nexport class Word8 implements Q.Flat {\n    constructor(\n        public value: number\n    ) { }\n    flatMaxSize() { return 8 }\n    flatEncode(st: Q.EncoderState) { st.bits(8, this.value); }\n}","export * from '../../core/Word8'","import * as Q from '../../core'\nimport * as Kb1f46a49c8f8 from  '../Word8/Kb1f46a49c8f8'\n\nexport const $SHAKE128_48:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<SHAKE128_48<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x9f,0x21,0x47,0x99,0x14,0x9b],\n  decoder : function (decoders) {\n        return function(st) { return new SHAKE128_48(Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st)) }\n  }\n}\n\nexport class SHAKE128_48 <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: Kb1f46a49c8f8.Word8,\n    public _1: Kb1f46a49c8f8.Word8,\n    public _2: Kb1f46a49c8f8.Word8,\n    public _3: Kb1f46a49c8f8.Word8,\n    public _4: Kb1f46a49c8f8.Word8,\n    public _5: Kb1f46a49c8f8.Word8,\n\n  ) { }\n\n  match <R>(m:{SHAKE128_48:(v0:Kb1f46a49c8f8.Word8,v1:Kb1f46a49c8f8.Word8,v2:Kb1f46a49c8f8.Word8,v3:Kb1f46a49c8f8.Word8,v4:Kb1f46a49c8f8.Word8,v5:Kb1f46a49c8f8.Word8)=>R}) : R {return m.SHAKE128_48(this._0,this._1,this._2,this._3,this._4,this._5);}\n  flatMaxSize():number {return this._0.flatMaxSize()+this._1.flatMaxSize()+this._2.flatMaxSize()+this._3.flatMaxSize()+this._4.flatMaxSize()+this._5.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);this._1.flatEncode(st);this._2.flatEncode(st);this._3.flatEncode(st);this._4.flatEncode(st);this._5.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $Maybe:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<Maybe<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xda,0x68,0x36,0x77,0x8f,0xd4],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Nothing() } else { return new Just(decoders[0](st)) } }\n  }\n}\n\nexport type Maybe <A extends Q.Flat> = Nothing <A> | Just <A>\n\nexport class Nothing <A extends Q.Flat> implements Q.Flat {\n\n  match <R>(m:{Nothing:R,Just:(v0:A)=>R}) : R {return m.Nothing;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.zero();}\n\n}\n\nexport class Just <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{Nothing:R,Just:(v0:A)=>R}) : R {return m.Just(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $Either:<A extends Q.Flat,B extends Q.Flat>(t0:Q.zmFold<A>,t1:Q.zmFold<B>) => Q.zmFold<Either<A,B>> = function (t1,t2) {return function (f) {return f(___,[t1(f),t2(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x62,0x60,0xe4,0x65,0xae,0x74],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Left(decoders[0](st)) } else { return new Right(decoders[1](st)) } }\n  }\n}\n\nexport type Either <A extends Q.Flat,B extends Q.Flat> = Left <A,B> | Right <A,B>\n\nexport class Left <A extends Q.Flat,B extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{Left:(v0:A)=>R,Right:(v0:B)=>R}) : R {return m.Left(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);}\n\n}\n\nexport class Right <A extends Q.Flat,B extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: B,\n\n  ) { }\n\n  match <R>(m:{Left:(v0:A)=>R,Right:(v0:B)=>R}) : R {return m.Right(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $List:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<List<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xb8,0xcd,0x13,0x18,0x71,0x98],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Nil() } else { return new Cons(decoders[0](st),___.decoder([decoders[0]])(st)) } }\n  }\n}\n\nexport type List <A extends Q.Flat> = Nil <A> | Cons <A>\n\nexport class Nil <A extends Q.Flat> implements Q.Flat {\n\n  match <R>(m:{Nil:R,Cons:(v0:A,v1:List<A>)=>R}) : R {return m.Nil;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.zero();}\n\n}\n\nexport class Cons <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n    public _1: List<A>,\n\n  ) { }\n\n  match <R>(m:{Nil:R,Cons:(v0:A,v1:List<A>)=>R}) : R {return m.Cons(this._0,this._1);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K6260e465ae74 from  '../Either/K6260e465ae74'\nimport * as Kb8cd13187198 from  '../List/Kb8cd13187198'\nimport * as K7028aa556ebc from  '../Type/K7028aa556ebc'\nimport * as Ka5583bf3ad34 from  '../Tuple2/Ka5583bf3ad34'\n\nexport const $ConTree:<A extends Q.Flat,B extends Q.Flat>(t0:Q.zmFold<A>,t1:Q.zmFold<B>) => Q.zmFold<ConTree<A,B>> = function (t1,t2) {return function (f) {return f(___,[t1(f),t2(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x86,0x65,0x3e,0x04,0x00,0x25],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Con(decoders[0](st),K6260e465ae74.___.decoder([Kb8cd13187198.___.decoder([K7028aa556ebc.___.decoder([decoders[1]])]),Kb8cd13187198.___.decoder([Ka5583bf3ad34.___.decoder([decoders[0],K7028aa556ebc.___.decoder([decoders[1]])])])])(st)) } else { return new _ConTree(___.decoder([decoders[0],decoders[1]])(st),___.decoder([decoders[0],decoders[1]])(st)) } }\n  }\n}\n\nexport type ConTree <A extends Q.Flat,B extends Q.Flat> = Con <A,B> | _ConTree <A,B>\n\nexport class Con <A extends Q.Flat,B extends Q.Flat> implements Q.Flat {\n  constructor(\n    public constrName: A,\n    public constrFields: K6260e465ae74.Either<Kb8cd13187198.List<K7028aa556ebc.Type<B>>,Kb8cd13187198.List<Ka5583bf3ad34.Tuple2<A,K7028aa556ebc.Type<B>>>>,\n\n  ) { }\n\n  match <R>(m:{Con:(v0:A,v1:K6260e465ae74.Either<Kb8cd13187198.List<K7028aa556ebc.Type<B>>,Kb8cd13187198.List<Ka5583bf3ad34.Tuple2<A,K7028aa556ebc.Type<B>>>>)=>R,ConTree:(v0:ConTree<A,B>,v1:ConTree<A,B>)=>R}) : R {return m.Con(this.constrName,this.constrFields);}\n  flatMaxSize():number {return 1+this.constrName.flatMaxSize()+this.constrFields.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this.constrName.flatEncode(st);this.constrFields.flatEncode(st);}\n\n}\n\nexport class _ConTree <A extends Q.Flat,B extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: ConTree<A,B>,\n    public _1: ConTree<A,B>,\n\n  ) { }\n\n  match <R>(m:{Con:(v0:A,v1:K6260e465ae74.Either<Kb8cd13187198.List<K7028aa556ebc.Type<B>>,Kb8cd13187198.List<Ka5583bf3ad34.Tuple2<A,K7028aa556ebc.Type<B>>>>)=>R,ConTree:(v0:ConTree<A,B>,v1:ConTree<A,B>)=>R}) : R {return m.ConTree(this._0,this._1);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kb1f46a49c8f8 from  '../Word8/Kb1f46a49c8f8'\nimport * as Kda6836778fd4 from  '../Maybe/Kda6836778fd4'\nimport * as K86653e040025 from  '../ConTree/K86653e040025'\n\nexport const $ADT:<A extends Q.Flat,B extends Q.Flat,C extends Q.Flat>(t0:Q.zmFold<A>,t1:Q.zmFold<B>,t2:Q.zmFold<C>) => Q.zmFold<ADT<A,B,C>> = function (t1,t2,t3) {return function (f) {return f(___,[t1(f),t2(f),t3(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x3e,0x82,0x57,0x25,0x5c,0xbf],\n  decoder : function (decoders) {\n        return function(st) { return new ADT(decoders[0](st),Kb1f46a49c8f8.___.decoder([])(st),Kda6836778fd4.___.decoder([K86653e040025.___.decoder([decoders[1],decoders[2]])])(st)) }\n  }\n}\n\nexport class ADT <A extends Q.Flat,B extends Q.Flat,C extends Q.Flat> implements Q.Flat {\n  constructor(\n    public declName: A,\n    public declNumParameters: Kb1f46a49c8f8.Word8,\n    public declCons: Kda6836778fd4.Maybe<K86653e040025.ConTree<B,C>>,\n\n  ) { }\n\n  match <R>(m:{ADT:(v0:A,v1:Kb1f46a49c8f8.Word8,v2:Kda6836778fd4.Maybe<K86653e040025.ConTree<B,C>>)=>R}) : R {return m.ADT(this.declName,this.declNumParameters,this.declCons);}\n  flatMaxSize():number {return this.declName.flatMaxSize()+this.declNumParameters.flatMaxSize()+this.declCons.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this.declName.flatEncode(st);this.declNumParameters.flatEncode(st);this.declCons.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $LeastSignificantFirst:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<LeastSignificantFirst<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x20,0xff,0xac,0xc8,0xf8,0xc9],\n  decoder : function (decoders) {\n        return function(st) { return new LeastSignificantFirst(decoders[0](st)) }\n  }\n}\n\nexport class LeastSignificantFirst <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{LeastSignificantFirst:(v0:A)=>R}) : R {return m.LeastSignificantFirst(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $NonEmptyList:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<NonEmptyList<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xbf,0x2d,0x1c,0x86,0xeb,0x20],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Elem(decoders[0](st)) } else { return new Cons(decoders[0](st),___.decoder([decoders[0]])(st)) } }\n  }\n}\n\nexport type NonEmptyList <A extends Q.Flat> = Elem <A> | Cons <A>\n\nexport class Elem <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{Elem:(v0:A)=>R,Cons:(v0:A,v1:NonEmptyList<A>)=>R}) : R {return m.Elem(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);}\n\n}\n\nexport class Cons <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n    public _1: NonEmptyList<A>,\n\n  ) { }\n\n  match <R>(m:{Elem:(v0:A)=>R,Cons:(v0:A,v1:NonEmptyList<A>)=>R}) : R {return m.Cons(this._0,this._1);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $MostSignificantFirst:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<MostSignificantFirst<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x74,0xe2,0xb3,0xb8,0x99,0x41],\n  decoder : function (decoders) {\n        return function(st) { return new MostSignificantFirst(decoders[0](st)) }\n  }\n}\n\nexport class MostSignificantFirst <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{MostSignificantFirst:(v0:A)=>R}) : R {return m.MostSignificantFirst(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from \"../core\";\n\nexport const $Word7 : Q.zmFold<Word7> = function (f) { return f(___, []) };\n\nexport const ___ : Q.zmTypeInfo = {\n    zid : [0xf4, 0xc9, 0x46, 0x33, 0x4a, 0x7e],\n    decoder : function (decoders) {\n      return function(st) {return new Word7(st.bits8(7));}\n    }\n}\n\nexport class Word7 implements Q.Flat {\n    constructor(\n        public value: number\n    ) { }\n    flatMaxSize() { return 7 }\n    flatEncode(st: Q.EncoderState) { st.bits(7, this.value); }\n}\n","export * from '../../core/Word7'","import * as Q from '../../core'\nimport * as K20ffacc8f8c9 from  '../LeastSignificantFirst/K20ffacc8f8c9'\nimport * as Kbf2d1c86eb20 from  '../NonEmptyList/Kbf2d1c86eb20'\nimport * as K74e2b3b89941 from  '../MostSignificantFirst/K74e2b3b89941'\nimport * as Kf4c946334a7e from  '../Word7/Kf4c946334a7e'\n\nexport const $Word:Q.zmFold<Word> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xf9,0x2e,0x83,0x39,0x90,0x8a],\n  decoder : function (decoders) {\n        return function(st) { return new Word(K20ffacc8f8c9.___.decoder([Kbf2d1c86eb20.___.decoder([K74e2b3b89941.___.decoder([Kf4c946334a7e.___.decoder([])])])])(st)) }\n  }\n}\n\nexport class Word  implements Q.Flat {\n  constructor(\n    public _0: K20ffacc8f8c9.LeastSignificantFirst<Kbf2d1c86eb20.NonEmptyList<K74e2b3b89941.MostSignificantFirst<Kf4c946334a7e.Word7>>>,\n\n  ) { }\n\n  match <R>(m:{Word:(v0:K20ffacc8f8c9.LeastSignificantFirst<Kbf2d1c86eb20.NonEmptyList<K74e2b3b89941.MostSignificantFirst<Kf4c946334a7e.Word7>>>)=>R}) : R {return m.Word(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kf92e8339908a from  '../Word/Kf92e8339908a'\n\nexport const $Word32:Q.zmFold<Word32> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x24,0x12,0x79,0x9c,0x99,0xf1],\n  decoder : function (decoders) {\n        return function(st) { return new Word32(Kf92e8339908a.___.decoder([])(st)) }\n  }\n}\n\nexport class Word32  implements Q.Flat {\n  constructor(\n    public _0: Kf92e8339908a.Word,\n\n  ) { }\n\n  match <R>(m:{Word32:(v0:Kf92e8339908a.Word)=>R}) : R {return m.Word32(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K2412799c99f1 from  '../Word32/K2412799c99f1'\n\nexport const $Char:Q.zmFold<Char> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x06,0x6d,0xb5,0x2a,0xf1,0x45],\n  decoder : function (decoders) {\n        return function(st) { return new Char(K2412799c99f1.___.decoder([])(st)) }\n  }\n}\n\nexport class Char  implements Q.Flat {\n  constructor(\n    public _0: K2412799c99f1.Word32,\n\n  ) { }\n\n  match <R>(m:{Char:(v0:K2412799c99f1.Word32)=>R}) : R {return m.Char(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $UnicodeLetter:Q.zmFold<UnicodeLetter> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x38,0x78,0xb3,0x58,0x0f,0xc5],\n  decoder : function (decoders) {\n        return function(st) { return new UnicodeLetter(K066db52af145.___.decoder([])(st)) }\n  }\n}\n\nexport class UnicodeLetter  implements Q.Flat {\n  constructor(\n    public _0: K066db52af145.Char,\n\n  ) { }\n\n  match <R>(m:{UnicodeLetter:(v0:K066db52af145.Char)=>R}) : R {return m.UnicodeLetter(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $UnicodeLetterOrNumberOrLine:Q.zmFold<UnicodeLetterOrNumberOrLine> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x33,0x44,0x55,0x20,0xc4,0x5a],\n  decoder : function (decoders) {\n        return function(st) { return new UnicodeLetterOrNumberOrLine(K066db52af145.___.decoder([])(st)) }\n  }\n}\n\nexport class UnicodeLetterOrNumberOrLine  implements Q.Flat {\n  constructor(\n    public _0: K066db52af145.Char,\n\n  ) { }\n\n  match <R>(m:{UnicodeLetterOrNumberOrLine:(v0:K066db52af145.Char)=>R}) : R {return m.UnicodeLetterOrNumberOrLine(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $UnicodeSymbol:Q.zmFold<UnicodeSymbol> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x80,0x10,0x30,0xef,0x54,0x3c],\n  decoder : function (decoders) {\n        return function(st) { return new UnicodeSymbol(K066db52af145.___.decoder([])(st)) }\n  }\n}\n\nexport class UnicodeSymbol  implements Q.Flat {\n  constructor(\n    public _0: K066db52af145.Char,\n\n  ) { }\n\n  match <R>(m:{UnicodeSymbol:(v0:K066db52af145.Char)=>R}) : R {return m.UnicodeSymbol(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K3878b3580fc5 from  '../UnicodeLetter/K3878b3580fc5'\nimport * as Kb8cd13187198 from  '../List/Kb8cd13187198'\nimport * as K33445520c45a from  '../UnicodeLetterOrNumberOrLine/K33445520c45a'\nimport * as Kbf2d1c86eb20 from  '../NonEmptyList/Kbf2d1c86eb20'\nimport * as K801030ef543c from  '../UnicodeSymbol/K801030ef543c'\n\nexport const $Identifier:Q.zmFold<Identifier> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xdc,0x26,0xe9,0xd9,0x00,0x47],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Name(K3878b3580fc5.___.decoder([])(st),Kb8cd13187198.___.decoder([K33445520c45a.___.decoder([])])(st)) } else { return new Symbol(Kbf2d1c86eb20.___.decoder([K801030ef543c.___.decoder([])])(st)) } }\n  }\n}\n\nexport type Identifier  = Name  | Symbol \n\nexport class Name  implements Q.Flat {\n  constructor(\n    public _0: K3878b3580fc5.UnicodeLetter,\n    public _1: Kb8cd13187198.List<K33445520c45a.UnicodeLetterOrNumberOrLine>,\n\n  ) { }\n\n  match <R>(m:{Name:(v0:K3878b3580fc5.UnicodeLetter,v1:Kb8cd13187198.List<K33445520c45a.UnicodeLetterOrNumberOrLine>)=>R,Symbol:(v0:Kbf2d1c86eb20.NonEmptyList<K801030ef543c.UnicodeSymbol>)=>R}) : R {return m.Name(this._0,this._1);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\nexport class Symbol  implements Q.Flat {\n  constructor(\n    public _0: Kbf2d1c86eb20.NonEmptyList<K801030ef543c.UnicodeSymbol>,\n\n  ) { }\n\n  match <R>(m:{Name:(v0:K3878b3580fc5.UnicodeLetter,v1:Kb8cd13187198.List<K33445520c45a.UnicodeLetterOrNumberOrLine>)=>R,Symbol:(v0:Kbf2d1c86eb20.NonEmptyList<K801030ef543c.UnicodeSymbol>)=>R}) : R {return m.Symbol(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kb1f46a49c8f8 from  '../Word8/Kb1f46a49c8f8'\n\nexport const $ADTRef:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<ADTRef<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x07,0xb1,0xb0,0x45,0xac,0x3c],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Var(Kb1f46a49c8f8.___.decoder([])(st)) } else { if (st.zero()) { return new Rec() } else { return new Ext(decoders[0](st)) } } }\n  }\n}\n\nexport type ADTRef <A extends Q.Flat> = Var <A> | Rec <A> | Ext <A>\n\nexport class Var <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: Kb1f46a49c8f8.Word8,\n\n  ) { }\n\n  match <R>(m:{Var:(v0:Kb1f46a49c8f8.Word8)=>R,Rec:R,Ext:(v0:A)=>R}) : R {return m.Var(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);}\n\n}\n\nexport class Rec <A extends Q.Flat> implements Q.Flat {\n\n  match <R>(m:{Var:(v0:Kb1f46a49c8f8.Word8)=>R,Rec:R,Ext:(v0:A)=>R}) : R {return m.Rec;}\n  flatMaxSize():number {return 2+0;}\n  flatEncode(st:Q.EncoderState) {st.one();st.zero();}\n\n}\n\nexport class Ext <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{Var:(v0:Kb1f46a49c8f8.Word8)=>R,Rec:R,Ext:(v0:A)=>R}) : R {return m.Ext(this._0);}\n  flatMaxSize():number {return 2+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K9f214799149b from  '../SHAKE128_48/K9f214799149b'\nimport * as K3e8257255cbf from  '../ADT/K3e8257255cbf'\nimport * as Kdc26e9d90047 from  '../Identifier/Kdc26e9d90047'\nimport * as K07b1b045ac3c from  '../ADTRef/K07b1b045ac3c'\n\nexport const $AbsRef:Q.zmFold<AbsRef> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x4b,0xbd,0x38,0x58,0x7b,0x9e],\n  decoder : function (decoders) {\n        return function(st) { return new AbsRef(K9f214799149b.___.decoder([K3e8257255cbf.___.decoder([Kdc26e9d90047.___.decoder([]),Kdc26e9d90047.___.decoder([]),K07b1b045ac3c.___.decoder([___.decoder([])])])])(st)) }\n  }\n}\n\nexport class AbsRef  implements Q.Flat {\n  constructor(\n    public _0: K9f214799149b.SHAKE128_48<K3e8257255cbf.ADT<Kdc26e9d90047.Identifier,Kdc26e9d90047.Identifier,K07b1b045ac3c.ADTRef<AbsRef>>>,\n\n  ) { }\n\n  match <R>(m:{AbsRef:(v0:K9f214799149b.SHAKE128_48<K3e8257255cbf.ADT<Kdc26e9d90047.Identifier,Kdc26e9d90047.Identifier,K07b1b045ac3c.ADTRef<AbsRef>>>)=>R}) : R {return m.AbsRef(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import {EncoderState,zmId,zmFold,zmTypeInfo,Decoder,DecoderState,flatDecoder,Flat} from './core'\nimport {Tuple2} from  './ADT/Tuple2/Ka5583bf3ad34'\nimport {FillerEnd} from  './ADT/Filler/Kae1dfeece189'\nimport {Type,TypeApp,TypeCon} from  './ADT/Type/K7028aa556ebc'\nimport {AbsRef} from  './ADT/AbsRef/K4bbd38587b9e'\nimport {SHAKE128_48} from  './ADT/SHAKE128_48/K9f214799149b'\nimport {Word8 as W} from  './ADT/Word8/Kb1f46a49c8f8'\n\nexport {flat,zmType,zmId,zmFold,unflat,Decoder,flatDecoder,Flat};\n\n// Flat encode a value\n//function flat(v:any implements Flat) {\nfunction flat(v: any): Uint8Array {\n        let val = new Tuple2(v, new FillerEnd());\n        let numBits = val.flatMaxSize();\n        var numBytes = Math.ceil(numBits / 8);\n        let st = new EncoderState(numBytes);\n        val.flatEncode(st);\n        return st.seal();\n}\n\n// Apply to a type to create the corresponding ZM type\nfunction zmType(t:zmTypeInfo ,ts:Type<AbsRef>[]) : Type<AbsRef> {\n    \n    function typeId(v: zmId): Type<AbsRef> {\n        return new TypeCon(new AbsRef(new SHAKE128_48(new W(v[0]), new W(v[1]), new W(v[2]), new W(v[3]), new W(v[4]), new W(v[5]))))\n    }\n\n    return ts.reduce((f, a) => new TypeApp(f, a), typeId(t.zid));\n};\n\n\nfunction unflat(dec:Decoder,buf:Uint8Array) {\n    //console.log(\"unflat\",buf);\n    const st = new DecoderState(buf);\n    const v = dec(st);\n    st.filler();\n    st.seal();\n    return v;\n}\n\n// Optimised Types\n\n//String.prototype.\n","import * as Q from '../../core'\n\nexport const $ByType:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<ByType<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x87,0xf0,0x90,0xa5,0x4e,0xa3],\n  decoder : function (decoders) {\n        return function(st) { return new ByType() }\n  }\n}\n\nexport class ByType <A extends Q.Flat> implements Q.Flat {\n\n  match <R>(m:{ByType:R}) : R {return m.ByType;}\n  flatMaxSize():number {return 0;}\n  flatEncode() {}\n\n}\n\n\n","import * as Q from \"../core\";\n\nexport const $Bytes : Q.zmFold<Bytes> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xf8,0x84,0x43,0x85,0xa4,0x43],\n  decoder : function (decoders) {\n    return function(st) {st.filler();return new Bytes(st.byteArray());}\n  }\n}\n\nexport class Bytes  implements Q.Flat {\n  constructor(\n    public bytes: Uint8Array\n  ) { }\n\n  flatMaxSize():number {\n      return 8+Q.byteArraySize(this.bytes); // Up to 8 bits for prefiller plus aligned byte array size\n    }\n  flatEncode(st:Q.EncoderState) {st.filler();st.byteArray(this.bytes);}\n}\n","export * from '../../core/Bytes'","import * as Q from '../../core'\nimport * as Kf8844385a443 from  '../Bytes/Kf8844385a443'\n\nexport const $BLOB:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<BLOB<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xf1,0x39,0xd4,0x75,0x1f,0xda],\n  decoder : function (decoders) {\n        return function(st) { return new BLOB(decoders[0](st),Kf8844385a443.___.decoder([])(st)) }\n  }\n}\n\nexport class BLOB <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public encoding: A,\n    public content: Kf8844385a443.Bytes,\n\n  ) { }\n\n  match <R>(m:{BLOB:(v0:A,v1:Kf8844385a443.Bytes)=>R}) : R {return m.BLOB(this.encoding,this.content);}\n  flatMaxSize():number {return this.encoding.flatMaxSize()+this.content.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this.encoding.flatEncode(st);this.content.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $FlatEncoding:Q.zmFold<FlatEncoding> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x98,0x21,0x48,0xc0,0x9d,0xdb],\n  decoder : function (decoders) {\n        return function(st) { return new FlatEncoding() }\n  }\n}\n\nexport class FlatEncoding  implements Q.Flat {\n\n  match <R>(m:{FlatEncoding:R}) : R {return m.FlatEncoding;}\n  flatMaxSize():number {return 0;}\n  flatEncode() {}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K7028aa556ebc from  '../Type/K7028aa556ebc'\nimport * as K4bbd38587b9e from  '../AbsRef/K4bbd38587b9e'\nimport * as Kf139d4751fda from  '../BLOB/Kf139d4751fda'\nimport * as K982148c09ddb from  '../FlatEncoding/K982148c09ddb'\n\nexport const $TypedBLOB:Q.zmFold<TypedBLOB> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x61,0x4e,0xdd,0x84,0xc8,0xbd],\n  decoder : function (decoders) {\n        return function(st) { return new TypedBLOB(K7028aa556ebc.___.decoder([K4bbd38587b9e.___.decoder([])])(st),Kf139d4751fda.___.decoder([K982148c09ddb.___.decoder([])])(st)) }\n  }\n}\n\nexport class TypedBLOB  implements Q.Flat {\n  constructor(\n    public _0: K7028aa556ebc.Type<K4bbd38587b9e.AbsRef>,\n    public _1: Kf139d4751fda.BLOB<K982148c09ddb.FlatEncoding>,\n\n  ) { }\n\n  match <R>(m:{TypedBLOB:(v0:K7028aa556ebc.Type<K4bbd38587b9e.AbsRef>,v1:Kf139d4751fda.BLOB<K982148c09ddb.FlatEncoding>)=>R}) : R {return m.TypedBLOB(this._0,this._1);}\n  flatMaxSize():number {return this._0.flatMaxSize()+this._1.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);this._1.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kb8cd13187198 from  '../List/Kb8cd13187198'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $ChannelSelectionResult:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<ChannelSelectionResult<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xc6,0x62,0x7a,0x31,0x7d,0xbc],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new Success() } else { if (st.zero()) { return new Failure(Kb8cd13187198.___.decoder([K066db52af145.___.decoder([])])(st)) } else { return new RetryAt(decoders[0](st)) } } }\n  }\n}\n\nexport type ChannelSelectionResult <A extends Q.Flat> = Success <A> | Failure <A> | RetryAt <A>\n\nexport class Success <A extends Q.Flat> implements Q.Flat {\n\n  match <R>(m:{Success:R,Failure:(v0:Kb8cd13187198.List<K066db52af145.Char>)=>R,RetryAt:(v0:A)=>R}) : R {return m.Success;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.zero();}\n\n}\n\nexport class Failure <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public reason: Kb8cd13187198.List<K066db52af145.Char>,\n\n  ) { }\n\n  match <R>(m:{Success:R,Failure:(v0:Kb8cd13187198.List<K066db52af145.Char>)=>R,RetryAt:(v0:A)=>R}) : R {return m.Failure(this.reason);}\n  flatMaxSize():number {return 2+this.reason.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();st.zero();this.reason.flatEncode(st);}\n\n}\n\nexport class RetryAt <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{Success:R,Failure:(v0:Kb8cd13187198.List<K066db52af145.Char>)=>R,RetryAt:(v0:A)=>R}) : R {return m.RetryAt(this._0);}\n  flatMaxSize():number {return 2+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\n\nexport const $Bool:Q.zmFold<Bool> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x30,0x6f,0x19,0x81,0xb4,0x1c],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new False() } else { return new True() } }\n  }\n}\n\nexport type Bool  = False  | True \n\nexport class False  implements Q.Flat {\n\n  match <R>(m:{False:R,True:R}) : R {return m.False;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.zero();}\n\n}\n\nexport class True  implements Q.Flat {\n\n  match <R>(m:{False:R,True:R}) : R {return m.True;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.one();}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kb8cd13187198 from  '../List/Kb8cd13187198'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $HostAddress:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<HostAddress<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x64,0xf9,0x3d,0x94,0xa7,0x3d],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new IPAddress(decoders[0](st)) } else { return new DNSAddress(Kb8cd13187198.___.decoder([K066db52af145.___.decoder([])])(st)) } }\n  }\n}\n\nexport type HostAddress <A extends Q.Flat> = IPAddress <A> | DNSAddress <A>\n\nexport class IPAddress <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: A,\n\n  ) { }\n\n  match <R>(m:{IPAddress:(v0:A)=>R,DNSAddress:(v0:Kb8cd13187198.List<K066db52af145.Char>)=>R}) : R {return m.IPAddress(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.zero();this._0.flatEncode(st);}\n\n}\n\nexport class DNSAddress <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public _0: Kb8cd13187198.List<K066db52af145.Char>,\n\n  ) { }\n\n  match <R>(m:{IPAddress:(v0:A)=>R,DNSAddress:(v0:Kb8cd13187198.List<K066db52af145.Char>)=>R}) : R {return m.DNSAddress(this._0);}\n  flatMaxSize():number {return 1+this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {st.one();this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kf92e8339908a from  '../Word/Kf92e8339908a'\n\nexport const $Word16:Q.zmFold<Word16> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x29,0x5e,0x24,0xd6,0x2f,0xac],\n  decoder : function (decoders) {\n        return function(st) { return new Word16(Kf92e8339908a.___.decoder([])(st)) }\n  }\n}\n\nexport class Word16  implements Q.Flat {\n  constructor(\n    public _0: Kf92e8339908a.Word,\n\n  ) { }\n\n  match <R>(m:{Word16:(v0:Kf92e8339908a.Word)=>R}) : R {return m.Word16(this._0);}\n  flatMaxSize():number {return this._0.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K295e24d62fac from  '../Word16/K295e24d62fac'\n\nexport const $HostPort:Q.zmFold<HostPort> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x0a,0xb5,0xac,0x63,0x03,0xb9],\n  decoder : function (decoders) {\n        return function(st) { return new HostPort(K295e24d62fac.___.decoder([])(st)) }\n  }\n}\n\nexport class HostPort  implements Q.Flat {\n  constructor(\n    public port: K295e24d62fac.Word16,\n\n  ) { }\n\n  match <R>(m:{HostPort:(v0:K295e24d62fac.Word16)=>R}) : R {return m.HostPort(this.port);}\n  flatMaxSize():number {return this.port.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this.port.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K64f93d94a73d from  '../HostAddress/K64f93d94a73d'\nimport * as K0ab5ac6303b9 from  '../HostPort/K0ab5ac6303b9'\n\nexport const $SocketAddress:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<SocketAddress<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xe5,0xd0,0x25,0x71,0xce,0x7b],\n  decoder : function (decoders) {\n        return function(st) { return new SocketAddress(K64f93d94a73d.___.decoder([decoders[0]])(st),K0ab5ac6303b9.___.decoder([])(st)) }\n  }\n}\n\nexport class SocketAddress <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public socketAddress: K64f93d94a73d.HostAddress<A>,\n    public socketPort: K0ab5ac6303b9.HostPort,\n\n  ) { }\n\n  match <R>(m:{SocketAddress:(v0:K64f93d94a73d.HostAddress<A>,v1:K0ab5ac6303b9.HostPort)=>R}) : R {return m.SocketAddress(this.socketAddress,this.socketPort);}\n  flatMaxSize():number {return this.socketAddress.flatMaxSize()+this.socketPort.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this.socketAddress.flatEncode(st);this.socketPort.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as K306f1981b41c from  '../Bool/K306f1981b41c'\nimport * as Ke5d02571ce7b from  '../SocketAddress/Ke5d02571ce7b'\nimport * as Kb8cd13187198 from  '../List/Kb8cd13187198'\nimport * as K066db52af145 from  '../Char/K066db52af145'\n\nexport const $WebSocketAddress:<A extends Q.Flat>(t0:Q.zmFold<A>) => Q.zmFold<WebSocketAddress<A>> = function (t1) {return function (f) {return f(___,[t1(f)])}}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0xc8,0x02,0xc6,0xaa,0xe1,0xaf],\n  decoder : function (decoders) {\n        return function(st) { return new WebSocketAddress(K306f1981b41c.___.decoder([])(st),Ke5d02571ce7b.___.decoder([decoders[0]])(st),Kb8cd13187198.___.decoder([K066db52af145.___.decoder([])])(st)) }\n  }\n}\n\nexport class WebSocketAddress <A extends Q.Flat> implements Q.Flat {\n  constructor(\n    public secure: K306f1981b41c.Bool,\n    public host: Ke5d02571ce7b.SocketAddress<A>,\n    public path: Kb8cd13187198.List<K066db52af145.Char>,\n\n  ) { }\n\n  match <R>(m:{WebSocketAddress:(v0:K306f1981b41c.Bool,v1:Ke5d02571ce7b.SocketAddress<A>,v2:Kb8cd13187198.List<K066db52af145.Char>)=>R}) : R {return m.WebSocketAddress(this.secure,this.host,this.path);}\n  flatMaxSize():number {return this.secure.flatMaxSize()+this.host.flatMaxSize()+this.path.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this.secure.flatEncode(st);this.host.flatEncode(st);this.path.flatEncode(st);}\n\n}\n\n\n","import * as Q from '../../core'\nimport * as Kb1f46a49c8f8 from  '../Word8/Kb1f46a49c8f8'\n\nexport const $IP4Address:Q.zmFold<IP4Address> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x6c,0xb2,0xee,0x3a,0xc4,0x09],\n  decoder : function (decoders) {\n        return function(st) { return new IP4Address(Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st),Kb1f46a49c8f8.___.decoder([])(st)) }\n  }\n}\n\nexport class IP4Address  implements Q.Flat {\n  constructor(\n    public _0: Kb1f46a49c8f8.Word8,\n    public _1: Kb1f46a49c8f8.Word8,\n    public _2: Kb1f46a49c8f8.Word8,\n    public _3: Kb1f46a49c8f8.Word8,\n\n  ) { }\n\n  match <R>(m:{IP4Address:(v0:Kb1f46a49c8f8.Word8,v1:Kb1f46a49c8f8.Word8,v2:Kb1f46a49c8f8.Word8,v3:Kb1f46a49c8f8.Word8)=>R}) : R {return m.IP4Address(this._0,this._1,this._2,this._3);}\n  flatMaxSize():number {return this._0.flatMaxSize()+this._1.flatMaxSize()+this._2.flatMaxSize()+this._3.flatMaxSize();}\n  flatEncode(st:Q.EncoderState) {this._0.flatEncode(st);this._1.flatEncode(st);this._2.flatEncode(st);this._3.flatEncode(st);}\n\n}\n\n\n","import { flat, zmType, zmFold, flatDecoder, unflat, Decoder } from \"./api\";\n//import {arraySize,zmId} from \"./core\";\n\nimport { ByType, $ByType } from './ADT/ByType/K87f090a54ea3'\nimport { Bit, V0, V1, $Bit } from './ADT/Bit/K65149ce3b366'\nimport { TypedBLOB } from './ADT/TypedBLOB/K614edd84c8bd'\nimport { Word8 } from './ADT/Word8/Kb1f46a49c8f8'\nimport { BLOB } from './ADT/BLOB/Kf139d4751fda'\nimport { FlatEncoding } from './ADT/FlatEncoding/K982148c09ddb'\n\n//import {Array,A1,A0} from  './ADT/Array/K2e8b4519aeaa'\n//import {Array} from  './ADT/Array/K2e8b4519aeaa'\nimport { Tuple2 } from './ADT/Tuple2/Ka5583bf3ad34'\nimport { $Either } from './ADT/Either/K6260e465ae74'\nimport { $Maybe } from './ADT/Maybe/Kda6836778fd4'\nimport { $Bool, Bool,True } from './ADT/Bool/K306f1981b41c'\nimport { PreAligned } from \"./ADT/PreAligned/Kb2f28cf37d12\";\nimport { FillerEnd } from \"./ADT/Filler/Kae1dfeece189\";\nimport { Bytes } from './ADT/Bytes/Kf8844385a443'\nimport { ChannelSelectionResult, $ChannelSelectionResult, RetryAt } from './ADT/ChannelSelectionResult/Kc6627a317dbc'\nimport { $WebSocketAddress, WebSocketAddress } from './ADT/WebSocketAddress/Kc802c6aae1af'\nimport { $IP4Address, IP4Address } from './ADT/IP4Address/K6cb2ee3ac409'\n\n\nexport function flatBLOB(v: any): BLOB<FlatEncoding> {\n    //return new BLOB(new FlatEncoding,new Bytes(new PreAligned(new FillerEnd(),flat (new ByType))));\n    return new BLOB(new FlatEncoding, new Bytes(flat(v)));\n}\n\nexport function typedBLOB(v: any, t: zmFold<any>): TypedBLOB {\n    return new TypedBLOB(t(zmType), flatBLOB(v));\n}\n\n\n\n//\n//flat (Success :: ChannelSelectionResult (WebSocketAddress IP4Address))\n//[1]\n\n//let chType : ByType<Bit> = new ByType();\n//console.log(chType,JSON.stringify (typeof chType));\n\n//let f = Flat.flat (<ByType<Bit>>:new ByType());\n//console.log(new Uint8Array(f));\n//console.log(new (f));\n\nexport interface IWebSocket {\n    close()\n    send(data: string | ArrayBuffer | Blob)\n    onopen?: (OpenEvent: any) => any\n    onclose?: (CloseEvent: any) => any\n    onmessage?: (MessageEvent: any) => any\n    onerror?: (ErrorEvent: any) => any\n  }\n\nexport interface Client<A> {\n    onOpen: (send: (v: A) => void,close:() => void) => void // channel successfully established, we can now start sending and eventually close the channel\n    onError: () => void                    // channel opening failed \n    onValue: (v: A) => void                // vaulue received from the channel\n}\n\nexport class Channel<A> {\n    //private socket: WebSocket;\n    //private dec: Decoder;\n\n    constructor(t: zmFold<A>, client: Client<A>) {\n\n        //this.socket = new WebSocket(\"ws://quid2.net:80/ws\", \"chats\");\n        //var skt = this.socket;\n        \n        const skt = new WebSocket(\"ws://quid2.net:80/ws\", \"chats\");\n        skt.binaryType = \"arraybuffer\";\n    \n        const dec = t(flatDecoder);        \n        var firstTime = true;\n        \n        skt.onopen = function (event) {\n            //conn.addEventListener('open', function (event) {\n            //console.log(\"Channel:OPENED\");\n            skt.send(flat(typedBLOB(new ByType, $ByType(t))));\n            //console.log(\"Channel:SENT ByType\");\n\n        };\n\n        skt.onmessage = function (event) {\n            console.log('Channel:message from server ', event.data);\n            if (firstTime) {\n                //console.log('Channel:message first answfrom server ', event.data);\n                firstTime = false;\n                const ansDecoder = $ChannelSelectionResult($WebSocketAddress($IP4Address))(flatDecoder);\n                const answer: ChannelSelectionResult<WebSocketAddress<IP4Address>> = unflat(ansDecoder, new Uint8Array(event.data));\n                answer.match({\n                    Success: client.onOpen(function (v: A) { skt.send(flat(v))},function (){skt.close();})\n                    , Failure: function (err) { throw Error(JSON.stringify(err)) }\n                    , RetryAt: function (addr) { throw Error(\"Retry is unsupported\") }\n                })\n            } else {\n                client.onValue(unflat(dec,new Uint8Array(event.data)));\n            }\n        };\n    \n        skt.onerror = function (event) {\n            console.log(\"Channel:ERROR, now what?\");\n            client.onError();\n        };\n\n    }\n}\n\n\n\n","import {Flat,flat,zmType,zmId,zmFold,unflat,flatDecoder,Decoder} from './api'\n\nimport {typedBLOB,Channel,Client} from './top'\n\nexport {Flat,flat,zmType,zmId,zmFold,unflat,flatDecoder,Decoder,typedBLOB,Channel,Client};\n","import * as Q from '../../core'\n\nexport const $Bit:Q.zmFold<Bit> = function (f) {return f(___,[])}\n\nexport const ___ : Q.zmTypeInfo = {\n  zid : [0x65,0x14,0x9c,0xe3,0xb3,0x66],\n  decoder : function (decoders) {\n        return function(st) { if (st.zero()) { return new V0() } else { return new V1() } }\n  }\n}\n\nexport type Bit  = V0  | V1 \n\nexport class V0  implements Q.Flat {\n\n  match <R>(m:{V0:R,V1:R}) : R {return m.V0;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.zero();}\n\n}\n\nexport class V1  implements Q.Flat {\n\n  match <R>(m:{V0:R,V1:R}) : R {return m.V1;}\n  flatMaxSize():number {return 1+0;}\n  flatEncode(st:Q.EncoderState) {st.one();}\n\n}\n\n\n","import {flat,Channel,typedBLOB} from '../index'\nimport { Bit, V0, V1, $Bit } from '../ADT/Bit/K65149ce3b366'\n\nexport function testTop() {\n    var chan0 = \n      new Channel($Bit\n        , {\n            onOpen: function (send,close) {}\n            , onError: function () { throw Error(\"Channel failed\") }\n            , onValue: v => console.log(\"received\", v)\n        });\n\n    var chan = \n        new Channel($Bit\n            , {\n                onOpen: function (send,close) {\n                    for (let v of [new V1, new V0, new V1, new V1,new V1]) {console.log(v);send(v);}\n                    close()}\n                , onError: function () { throw Error(\"Channel failed\") }\n                , onValue: v => console.log(\"received\", v)\n            });\n}\n\ntestTop();"]}